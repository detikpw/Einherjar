{"version":3,"sources":["webpack:///./src/templates/TagPost.js"],"names":["__webpack_require__","r","__webpack_exports__","d","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","ramda__WEBPACK_IMPORTED_MODULE_1__","ramda__WEBPACK_IMPORTED_MODULE_2__","change_case__WEBPACK_IMPORTED_MODULE_3__","_components_layout_pages_PostList__WEBPACK_IMPORTED_MODULE_4__","pageTitleHandler","pageTitle","_ref","tag","pageContext","edges","data","allMarkdownRemark","location","posts","map","prop","sentence","pageData","title","a","createElement"],"mappings":"0FAIAA,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,8BAAAE,IAAA,IAAAC,EAAAL,EAAA,GAAAM,EAAAN,EAAAO,EAAAF,GAAAG,EAAAR,EAAA,KAAAS,EAAAT,EAAA,KAAAU,EAAAV,EAAA,KAAAW,EAAAX,EAAA,KAOMY,EAAmB,SAAAC,GACvB,MAAkB,QAAdA,EAA4BA,EACzB,mBAGMX,EAAA,iBAAAY,GAMH,IALOC,EAKPD,EALRE,YAAeD,IAEQE,EAGfH,EAJRI,KACEC,kBAAqBF,MAEvBG,EACQN,EADRM,SAEIC,EAAQC,YAAIC,YAAK,QAASN,GAC1BJ,EAAYW,mBAAST,GACrBU,EAAW,CACfC,MAAOb,GAET,OACEP,EAAAqB,EAAAC,cAACjB,EAAA,EAAD,CACEU,MAAOA,EACPR,UAAWD,EAAiBC,GAC5BY,SAAUA,EAAUL,SAAUA,KAK7B,IAAMhB,EAAS","file":"component---src-templates-tag-post-js-320eae2f9fc645f01355.js","sourcesContent":["// @flow\n\nimport type { Node } from 'react';\n\nimport React from 'react';\nimport { graphql } from \"gatsby\";\nimport { map, prop } from 'ramda';\nimport { sentence } from 'change-case';\nimport PostList from '../components/layout/pages/PostList';\n\n\nconst pageTitleHandler = pageTitle => {\n  if (pageTitle !== 'Til') return pageTitle\n  return 'Today I Learned'\n}\n\nexport default ({\n    pageContext: { tag },\n    data: {\n      allMarkdownRemark: { edges },\n    },\n    location\n}): Node => {\n  const posts = map(prop('node'), edges)\n  const pageTitle = sentence(tag);\n  const pageData = {\n    title: pageTitle\n  }\n  return (\n    <PostList\n      posts={posts}\n      pageTitle={pageTitleHandler(pageTitle)}\n      pageData={pageData} location={location}\n    />\n  )\n}\n\nexport const pageQuery = graphql`\n  query($tag: String!) {\n    allMarkdownRemark(\n      sort: { order: DESC, fields: [frontmatter___date] }\n      filter: { frontmatter: {\n        tags: { eq: $tag }\n        published: { ne: false }\n      } }\n    ) {\n      edges {\n        node {\n          id\n          excerpt(pruneLength: 250)\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            image {\n              src\n              caption\n              captionUrl\n            }\n          }\n          fields {\n            path\n          }\n          html\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}