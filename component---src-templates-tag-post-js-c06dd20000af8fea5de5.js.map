{"version":3,"sources":["webpack:///./src/templates/TagPost.js"],"names":["__webpack_require__","r","__webpack_exports__","d","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_helmet__WEBPACK_IMPORTED_MODULE_1__","react_helmet__WEBPACK_IMPORTED_MODULE_1___default","ramda__WEBPACK_IMPORTED_MODULE_2__","ramda__WEBPACK_IMPORTED_MODULE_3__","change_case__WEBPACK_IMPORTED_MODULE_4__","_components_layout_pages_PostList__WEBPACK_IMPORTED_MODULE_5__","pageTitleHandler","pageTitle","_ref","tag","pageContext","edges","data","allMarkdownRemark","posts","map","prop","sentence","a","createElement","Fragment"],"mappings":"0FAIAA,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,8BAAAE,IAAA,IAAAC,EAAAL,EAAA,GAAAM,EAAAN,EAAAO,EAAAF,GAAAG,EAAAR,EAAA,KAAAS,EAAAT,EAAAO,EAAAC,GAAAE,EAAAV,EAAA,KAAAW,EAAAX,EAAA,KAAAY,EAAAZ,EAAA,KAAAa,EAAAb,EAAA,KAQMc,EAAmB,SAAAC,GACvB,MAAkB,QAAdA,EAA4BA,EACzB,mBAGMb,EAAA,iBAAAc,GAKH,IAJOC,EAIPD,EAJRE,YAAeD,IAEQE,EAEfH,EAHRI,KACEC,kBAAqBF,MAGnBG,EAAQC,YAAIC,YAAK,QAASL,GAC1BJ,EAAYU,mBAASR,GAC3B,OACEX,EAAAoB,EAAAC,cAAArB,EAAAoB,EAAAE,SAAA,KACEtB,EAAAoB,EAAAC,cAACd,EAAA,EAAD,CAAUS,MAAOA,EAAOP,UAAWD,EAAiBC,KACpDT,EAAAoB,EAAAC,cAAClB,EAAAiB,EAAD,KACEpB,EAAAoB,EAAAC,cAAA,aAAQZ,MAOT,IAAMX,EAAS","file":"component---src-templates-tag-post-js-c06dd20000af8fea5de5.js","sourcesContent":["// @flow\n\nimport type { Node } from 'react';\n\nimport React from 'react';\nimport Helmet from 'react-helmet';\nimport { graphql } from \"gatsby\";\nimport { map, prop } from 'ramda';\nimport { sentence } from 'change-case';\nimport PostList from '../components/layout/pages/PostList';\n\n\nconst pageTitleHandler = pageTitle => {\n  if (pageTitle !== 'Til') return pageTitle\n  return 'Today I Learned'\n}\n\nexport default ({\n    pageContext: { tag },\n    data: {\n      allMarkdownRemark: { edges },\n    },\n}): Node => {\n  const posts = map(prop('node'), edges)\n  const pageTitle = sentence(tag);\n  return (\n    <>\n      <PostList posts={posts} pageTitle={pageTitleHandler(pageTitle)} />\n      <Helmet>\n        <title>{pageTitle}</title>\n        {/* TODO Description and reusable Helmet */}\n      </Helmet>\n    </>\n  )\n}\n\nexport const pageQuery = graphql`\n  query($tag: String!) {\n    allMarkdownRemark(\n      sort: { order: DESC, fields: [frontmatter___date] }\n      filter: { frontmatter: {\n        tags: { eq: $tag }\n      } }\n    ) {\n      edges {\n        node {\n          id\n          excerpt(pruneLength: 250)\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            image {\n              src\n              caption\n              captionUrl\n            }\n          }\n          fields {\n            path\n          }\n          html\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}