{"version":3,"sources":["webpack:///./src/pages/404.js","webpack:///./src/components/link/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/devices/Mobile.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/components/layout/pages/Body.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/icons/Menu.js","webpack:///./src/components/layout/HeaderMobile.js","webpack:///./src/components/layout/Footer.js","webpack:///./src/components/list/List.js","webpack:///./src/components/sidebar/Navbar.js","webpack:///./src/components/list/ListItem.js","webpack:///./src/components/sidebar/SidebarItem.js","webpack:///./src/components/icons/Close.js","webpack:///./src/components/sidebar/index.js","webpack:///./src/components/layout/Mobile.js","webpack:///./src/components/navs/NavItem.js","webpack:///./src/components/layout/HeaderDesktop.js","webpack:///./src/components/devices/Desktop.js","webpack:///./src/components/layout/Desktop.js","webpack:///./src/components/seo/SiteMeta.js","webpack:///./src/components/layout/index.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","rebass__WEBPACK_IMPORTED_MODULE_1__","_components_layout__WEBPACK_IMPORTED_MODULE_2__","_components_layout_pages_Body__WEBPACK_IMPORTED_MODULE_3__","PageNotFound","_ref","location","a","createElement","py","Link","_customTo","children","to","withTextDecoration","props","_babel_runtime_helpers_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_3___default","isInternal","test","customTo","react__WEBPACK_IMPORTED_MODULE_4___default","_StyledRebassLink","Object","assign","target","undefined","as","GatsbyLink","color","_css","text-decoration","defaultProps","d","StaticQuery","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","Consumer","staticQueryData","data","query","render","propTypes","PropTypes","object","string","isRequired","func","react__WEBPACK_IMPORTED_MODULE_1___default","react_responsive__WEBPACK_IMPORTED_MODULE_2___default","maxWidth","m","module","exports","require","default","Body","px","alignSelf","width","ProdPageRenderer","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","json","shape","Menu","react_default","height","viewBox","xmlns","fill","fillRule","header","onOpenSidebar","_StyledCard","boxShadow","bg","position","_StyledFlex","alignItems","justifyContent","flexDirection","_css2","dist","onClick","icons_Menu","components_link","fontFamily","fontWeight","site","siteMetadata","title","Header","_ref2","gatsby_browser_entry","_1784012146","Footer","fontSize","lineHeight","List","mb","pl","Navbar","_StyledBox","pt","textTransform","list_List","ListItem","ListItem_StyledBox","list-style-type","SidebarItem","list_ListItem","Close","id","style","stroke","strokeLinecap","strokeLinejoin","strokeWidth","x1","x2","y1","y2","renderSidebarItem","category","fieldValue","sidebar_SidebarItem","key","sentence","sidebar","onCloseSidebar","isSidebarOpen","sidebar_StyledFlex","top","left","zIndex","_StyledButton","textAlign","icons_Close","sidebar_Navbar","map","allMarkdownRemark","group","_ref3","_2695456878","Mobile","state","openSidebar","_this","setState","closeSidebar","this","devices_Mobile","components_sidebar","Mobile_StyledFlex","HeaderMobile","Mobile_StyledBox","flexGrow","overflowY","layout_Footer","Component","NavItem","mx","renderNavItem","navs_NavItem","HeaderDesktop","HeaderDesktop_StyledFlex","borderRadius","_StyledText","fontStyle","_3370774989","devices_Desktop","react_responsive_default","minWidth","Desktop","Desktop_StyledFlex","borderTop","layout_HeaderDesktop","siteMeta","pageData","getTitle","prop","getDescription","getTwitterUsername","path","description","image","console","log","Helmet_default","titleTemplate","name","content","property","href","SiteMeta","_2038369060","GlobalStyle","createGlobalStyle","layout_templateObject","Layout","layout_StyledBox","seo_SiteMeta","rel","Mobile_Mobile","layout_Desktop"],"mappings":"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","file":"component---src-pages-404-js-be1a3b521c93605b4b00.js","sourcesContent":["import React from 'react';\nimport { Box } from 'rebass';\nimport Layout from  '../components/layout';\nimport Body from  '../components/layout/pages/Body';\n\nconst PageNotFound = ({ location }) => (\n  <Layout location={location}>\n    <Box py={2}>\n      <Body>\n        PAGE_NOT_FOUND\n      </Body>\n    </Box>\n  </Layout>\n);\n\nexport default PageNotFound;","import React from 'react';\nimport { Link as RebassLink } from 'rebass';\nimport { Link as GatsbyLink } from 'gatsby';\n\nconst Link = ({ children, to, withTextDecoration, ...props }) => {\n  const isInternal = /^\\/(?!\\/)/.test(to);\n  const customTo = {\n    [isInternal ? 'to' : 'href']: to\n  }\n  return (\n    <RebassLink\n      {...props}\n      {...customTo}\n      target={isInternal ? undefined : '_blank'}\n      as={isInternal ? GatsbyLink : 'a'}\n      color='black'\n      css={{\n        'text-decoration': withTextDecoration ? undefined : 'none',\n      }}\n    >\n      {children}\n    </RebassLink>\n  );\n}\n\nLink.defaultProps = {\n    withTextDecoration: true\n}\n\nexport default Link;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","// @flow\n\nimport React from 'react';\nimport Responsive from 'react-responsive';\n\ntype Props = { [string]: * }\n\nexport default (props: Props) => <Responsive {...props} maxWidth=\"64em\" />;\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from 'react';\nimport { Box } from 'rebass';\n\nconst Body = ({ children }) => (\n  <Box\n    px={3}\n    alignSelf=\"center\"\n    width={[1, 1, 1/2]}\n  >\n    {children}\n  </Box>\n);\n\nexport default Body;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react';\n\nconst Menu = () => (\n  <svg width=\"16\" height=\"14\" viewBox=\"0 0 20 14\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M0 0h20v2H0V0zm0 6h20v2H0V6zm0 6h20v2H0v-2z\" fill=\"#000000\" fillRule=\"evenodd\" />\n  </svg>\n);\n\nexport default Menu;\n","import React from 'react';\nimport { Box, Button,  Flex, Text, Card } from 'rebass';\nimport { StaticQuery, graphql } from 'gatsby';\nimport Menu from '../icons/Menu';\nimport Link from '../link';\n\nconst header = ({ onOpenSidebar }) => data => (\n  <Card\n    width={1}\n    boxShadow=\"0 1px 0 rgba(0,0,0,0.15)\"\n    bg=\"white\"\n    css={{\n      position: 'fixed'\n    }}\n  >\n    <Flex\n      px={3}\n      alignItems=\"center\"\n      justifyContent=\"start\"\n      flexDirection=\"row\"\n      css={{\n          height: '40px'\n      }}\n    >\n      <Box alignSelf=\"center\" width={1/12}>\n        <Button px={0} bg=\"white\" onClick={onOpenSidebar}>\n          <Menu />\n        </Button>\n      </Box>\n      <Box alignSelf=\"center\" width={5/6}>\n        <Link to=\"/\" withTextDecoration={false}>\n          <Text\n            fontFamily=\"Exo\"\n            fontWeight=\"bold\"\n          >\n            {data.site.siteMetadata.title}\n          </Text>\n        </Link>\n      </Box>\n    </Flex>\n  </Card>\n);\n\nconst Header = ({ onOpenSidebar }) => (\n  <StaticQuery\n    query={graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }`\n    }\n    render={header({ onOpenSidebar })}\n  />\n);\n\nexport default Header;\n","import React from 'react';\nimport { Flex, Text } from 'rebass';\nimport Body from './pages/Body';\nimport Link from '../link';\n\nconst Footer = () => (\n  <Body>\n    <Flex py={4}>\n      <Text\n          fontFamily={400}\n          fontSize=\".625rem\"\n          lineHeight={1.2}\n        >\n          Powered by <Link to=\"https://www.gatsbyjs.org/\">Gatsby</Link>\n          &nbsp; inspired by jekyll theme <Link to=\"https://github.com/mmistakes/so-simple-theme\">\n          So Simple Theme </Link> and <Link to=\"https://www.vice.com\">vice.com</Link>\n        </Text>\n    </Flex>\n  </Body>\n);\n\nexport default Footer;\n","import React from 'react';\nimport { Box } from 'rebass';\n\nconst List = ({ children }) => (\n    <Box\n        as=\"ul\"\n        mb={2}\n        pl={0}\n    >\n        {children}\n    </Box>\n);\n\nexport default List;\n","import React from 'react';\nimport { Box, Text } from 'rebass';\nimport List from '../list/List';\n\nconst Navbar = ({ children, title }) => (\n  <Box\n    pt={4}\n    css={{\n      fontFamily: 'HelveticaNeueArabic,NeueHelveticaW01,Helvetica,HelveticaWorld,Arial,TazuganeGothic,sans-serif',\n      textTransform: 'uppercase'\n    }}\n  >\n    {title && (\n      <Text\n        fontFamily={400}\n        fontSize=\".625rem\"\n        lineHeight={1.2}\n      >\n        {title}\n      </Text>\n    )}\n    <List>\n      {children}\n    </List>\n  </Box>\n);\n\nexport default Navbar;\n","import React from 'react';\nimport { Box } from 'rebass';\n\nconst ListItem = ({ children }) => (\n    <Box\n        as=\"li\"\n        mb={2}\n        pl={0}\n        css={{\n          'list-style-type': 'none'\n        }}\n    >\n        {children}\n    </Box>\n);\n\nexport default ListItem;\n","import React from 'react';\nimport { Text } from 'rebass';\nimport Link from '../link';\nimport ListItem from '../list/ListItem';\n\nconst SidebarItem = ({ children, to }) => (\n  <ListItem>\n    <Link to={to} withTextDecoration={false}>\n      <Text\n        fontWeight={600}\n        lineHeight={1.2}\n      >\n        {children}\n      </Text>\n    </Link>\n  </ListItem>\n);\n\nexport default SidebarItem;\n","import React from 'react';\n\nconst Close = () => (\n  <svg viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24px\">\n    <title/>\n    <g id=\"cross\" style={{\n      fill: 'none',\n      stroke: '#000',\n      strokeLinecap: 'round',\n      strokeLinejoin: 'round',\n      strokeWidth: '2px',\n    }}>\n      <line x1=\"7\" x2=\"25\" y1=\"7\" y2=\"25\"/>\n      <line x1=\"7\" x2=\"25\" y1=\"25\" y2=\"7\"/>\n    </g>\n  </svg>\n);\n\nexport default Close;\n","import React from 'react';\nimport { Box, Flex, Button } from 'rebass';\nimport { StaticQuery, graphql } from 'gatsby';\nimport { map } from 'ramda';\nimport { sentence } from 'change-case';\nimport Navbar from './Navbar';\nimport SidebarItem from './SidebarItem';\nimport CloseIcon from '../icons/Close';\n\nconst renderSidebarItem = ({ fieldValue: category }) => (\n  <SidebarItem key={category} to={`/${category}`}>\n    {sentence(category)}\n  </SidebarItem>\n);\nconst sidebar = ({ onCloseSidebar, isSidebarOpen }) => data => (\n  <Box onClick={onCloseSidebar}>\n    {isSidebarOpen && <Flex\n        bg=\"white\"\n        width={1}\n        px={3}\n        flexDirection=\"column\"\n        css={{\n            position: 'fixed',\n            top: '0',\n            left: '0',\n            zIndex: 250,\n            height:'100vh'\n        }}\n    >\n      <Button\n        bg=\"white\"\n        onClick={onCloseSidebar}\n        px={0}\n        css={{\n            height: '60px',\n            textAlign: 'left'\n        }}\n        width={1/6}\n      >\n        <CloseIcon />\n      </Button>\n      <Navbar>\n        <SidebarItem to=\"/\">\n          Home\n        </SidebarItem>\n      </Navbar>\n      <Navbar title=\"category\">\n        {map(renderSidebarItem, data.allMarkdownRemark.group)}\n        <SidebarItem to=\"/tags/til\">\n          TIL\n        </SidebarItem>\n      </Navbar>\n    </Flex>}\n  </Box>\n);\n\nconst Header = ({ onCloseSidebar, isSidebarOpen }) => (\n  <StaticQuery\n    query={graphql`\n      query{\n        allMarkdownRemark{\n          group(field: fields___category) {\n            fieldValue\n          }\n        }\n      }`\n    }\n    render={sidebar({ onCloseSidebar, isSidebarOpen })}\n  />\n);\n\nexport default Header;\n","import React, { Component } from 'react';\nimport { Flex, Box } from 'rebass';\nimport Header from './HeaderMobile';\nimport Footer from './Footer';\nimport Sidebar from '../sidebar';\nimport MobileScreen from '../devices/Mobile';\n\nexport default class Mobile extends Component {\n  state = {\n    isSidebarOpen: false\n  }\n\n  openSidebar = () => this.setState({ isSidebarOpen: true })\n  closeSidebar = () => this.setState({ isSidebarOpen: false })\n\n  render() {\n    const { children } = this.props\n    const { isSidebarOpen } = this.state;\n    return (\n      <MobileScreen>\n        <Sidebar\n          onCloseSidebar={this.closeSidebar}\n          isSidebarOpen={isSidebarOpen}\n        />\n        <Flex\n          flexDirection=\"column\"\n          css={{\n            height: '100%',\n          }}\n        >\n          <Header\n            onOpenSidebar={this.openSidebar}\n            onCloseSidebar={this.closeSidebar}\n          />\n          <Box\n            pt=\"40px\"\n            css={{\n              flexGrow: 1,\n              overflowY: 'auto'\n            }}\n          >\n            {children}\n          </Box>\n          <Footer />\n        </Flex>\n      </MobileScreen>\n    );\n  }\n}\n","import React from 'react';\nimport { Text } from 'rebass';\nimport Link from '../link';\nconst NavItem = ({ children, to }) => (\n  <Link to={to} mx={2}>\n    <Text\n      color=\"white\"\n      lineHeight={1.2}\n    >\n      {children}\n    </Text>\n  </Link>\n)\n\nexport default NavItem;\n","import React from 'react';\nimport { Flex, Text } from 'rebass';\nimport { StaticQuery, graphql } from 'gatsby';\nimport { sentence } from 'change-case';\nimport { map } from 'ramda';\nimport NavItem from '../navs/NavItem';\nimport Link from '../link';\n\nconst renderNavItem = ({ fieldValue: category }) => (\n  <NavItem key={category} to={`/${category}`}>\n    {sentence(category)}\n  </NavItem>\n);\n\nconst headerDesktop = () => data => (\n  <Flex\n    flexDirection=\"column\"\n    justifyContent=\"center\"\n    alignItems=\"center\"\n  >\n    <Flex bg=\"black\"\n      py={2}\n      px={3}\n      mb={4}\n      css={{\n        textTransform: 'uppercase',\n        borderRadius: '0 0 10px 10px',\n      }}\n    >\n      {map(renderNavItem, data.allMarkdownRemark.group)}\n      <NavItem to=\"/tags/til\">\n        TIL\n      </NavItem>\n    </Flex>\n    <Link to=\"/\" withTextDecoration={false}>\n      <Text\n        fontFamily=\"Exo\"\n        fontSize=\"2.25rem\"\n      >\n        {data.site.siteMetadata.title}\n      </Text>\n    </Link>\n    <Text\n      fontFamily=\"Exo\"\n      fontSize=\"1.25rem\"\n      css={{\n        fontStyle: 'italic'\n      }}\n    >\n      Just A Note\n    </Text>\n  </Flex>\n);\n\nconst HeaderDesktop = () => (\n  <StaticQuery\n    query={graphql`\n      query{\n        allMarkdownRemark{\n          group(field: fields___category) {\n            fieldValue\n          }\n        }\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }`\n    }\n    render={headerDesktop()}\n  />\n);\n\nexport default HeaderDesktop;\n","// @flow\n\nimport React from 'react';\nimport Responsive from 'react-responsive';\n\ntype Props = { [string]: * }\n\nexport default (props: Props) => <Responsive {...props} minWidth=\"64em\" />;\n","import React from 'react';\nimport { Flex } from 'rebass';\nimport HeaderDesktop from './HeaderDesktop';\nimport Footer from './Footer';\nimport DesktopScreen from '../devices/Desktop';\n\nconst Desktop = ({ children }) => (\n  <DesktopScreen>\n    <Flex\n      flexDirection=\"column\"\n      alignItems=\"center\"\n      css={{\n        borderTop: '5px solid #000'\n      }}\n    >\n      <HeaderDesktop />\n      {children}\n      <Footer />\n    </Flex>\n  </DesktopScreen>\n);\n\nexport default Desktop;\n","import React from 'react';\nimport { StaticQuery, graphql } from 'gatsby';\nimport { prop, path } from 'ramda';\nimport Helmet from 'react-helmet';\n\nconst siteMeta = ({ pageData, location, children })=> ({ site: { siteMetadata } }) => {\n  const getTitle = prop('title')\n  const getDescription = prop('description');\n  const getTwitterUsername = path(['social', 'twitter', 'username']);\n  const title = getTitle(pageData) || getTitle(siteMetadata);\n  const description = getDescription(pageData) || getDescription(siteMetadata);\n  const image = path(['image', 'src'])(pageData);\n  console.log('getTitle(siteMetadata)')\n  console.log(getTitle(siteMetadata))\n  return (\n    <Helmet titleTemplate={`%s | ${getTitle(siteMetadata)}`}>\n      <title>{title}</title>\n      <meta name=\"description\" content={description} />\n      <meta property=\"og:url\" content={location.href} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={description} />\n      <meta property=\"og:image\" content={image} />\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\n      <meta name=\"twitter:creator\" content={getTwitterUsername(siteMetadata)} />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={description} />\n      <meta name=\"twitter:image\" content={image} />\n      {children}\n    </Helmet>\n  );\n}\n\nconst SiteMeta = ({ pageData, location, children }) => (\n  <StaticQuery\n    query={graphql`\n      query{\n        site {\n          siteMetadata {\n            title\n            description\n            host\n            social {\n              twitter {\n                username\n              }\n            }\n          }\n        }\n      }\n    `\n    }\n    render={siteMeta({ pageData, location, children })}\n  />\n)\n\nexport default SiteMeta;\n","import React from 'react';\nimport { createGlobalStyle } from 'styled-components'\nimport { Box } from 'rebass';\nimport MobileLayout from './Mobile';\nimport DesktopLayout from './Desktop';\nimport SiteMeta from '../seo/SiteMeta';\n\nconst GlobalStyle = createGlobalStyle`\n  body {\n    margin: 0;\n    height: 100%;\n  }\n  ::-webkit-scrollbar {\n    width: 0px;  /* remove scrollbar space */\n    background: transparent;  /* optional: just make scrollbar invisible */\n  }\n  blockquote {\n    font-family: \"volkhov\",serif;\n    font-style: italic;\n    font-size: 1rem;\n    line-height: 1.5;\n    margin-bottom: 1.5rem;\n    padding-left: 20px;\n    border-left: 8px solid #000;\n  }\n  a {\n    color: black;\n  }\n`\nconst Layout = ({ children, location, pageData }) => (\n  <Box\n    css={{\n      fontFamily:'HelveticaNeueArabic,NeueHelveticaW01,Helvetica,HelveticaWorld,Arial,TazuganeGothic,sans-serif',\n    }}\n  >\n    <SiteMeta location={location} pageData={pageData}>\n      <meta\n        name=\"viewport\"\n        content=\"width=device-width,initial-scale=1,shrink-to-fit=no,viewport-fit=cover\"\n      />\n      <link href=\"https://fonts.googleapis.com/css?family=Exo\" rel=\"stylesheet\"/>\n      <link href=\"https://fonts.googleapis.com/css?family=Volkhov\" rel=\"stylesheet\"></link>\n    </SiteMeta>\n    <GlobalStyle />\n    <MobileLayout>\n      {children}\n    </MobileLayout>\n    <DesktopLayout>\n      {children}\n    </DesktopLayout>\n  </Box>\n);\n\nexport default Layout;\n\n"],"sourceRoot":""}